{"version":3,"sources":["firebaseSetup.ts","components/SigninButton.tsx","components/SignOutButton.tsx","context/AuthContext.tsx","icons/chatology-logos.jpeg","components/ChatMessage.tsx","components/ChatView.tsx","components/ChatRoom.tsx","state/state.tsx","state/initialState.ts","state/actions/actions.ts","hooks/useAxios.ts","api/api.ts","components/AddFriend.tsx","components/ChatSelector.tsx","App.tsx","reportWebVitals.ts","provider/AuthProvider.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseObject","firestore","auth","SignIn","Button","variant","color","onClick","provider","GoogleAuthProvider","signInWithPopup","useStyles","makeStyles","signOutButton","justifyContent","SignOut","firebaseSetup","classes","currentUser","signOut","className","AuthContext","React","createContext","root","message","display","alignItems","textAlign","listStyle","sent","flexDirection","background","alignSelf","received","messageStyle","maxwidth","marginbottom","lineheight","padding","borderradius","position","textalign","image","width","height","borderRadius","margin","date","paddingBottom","timeSent","timeReceived","ChatMessage","props","text","uid","photoURL","createdAt","isOwnMessage","messageClass","dateClass","dateTime","toDate","toLocaleTimeString","toLocaleDateString","src","form","bottom","backgroundColor","maxWidth","fontSize","main","overflowY","formButton","input","lineHeight","outline","border","goBack","ChatView","messages","goBackFunc","messageRef","dummy","useRef","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","add","FieldValue","serverTimestamp","current","scrollIntoView","behavior","console","log","Fab","map","msg","id","ref","onSubmit","value","onChange","target","type","disabled","ChatRoom","fireBaseObject","collection","query","orderBy","limitToLast","useCollectionData","idField","useEffect","StateContext","loading","INCREMENT_LOADING","DECREMENT_LOADING","ADD_ERROR","instance","axios","create","useAxios","initialRequest","useContext","dispatch","undefined","error","setError","setLoading","data","setData","cancelToken","setCancelToken","call","useCallback","overrides","successHandler","errorHandler","completeHandler","onCancel","loadingHandler","progressHandler","parameters","body","overrideRequest","request","skipLoading","authHeader","Error","url","method","token","CancelToken","source","config","headers","params","onUploadProgress","event","onDownloadProgress","then","response","catch","isCancel","finally","useMemo","GET_USER_DOES_EXIST","isDev","chatRoomContainer","addFriendButton","marginLeft","AddFriend","openDirectChat","getFriendData","TextField","label","ChatRoomSelectionEnum","ChatSelector","chatRoom","setChatRoom","chatSelection","specificChatRoom","header","minHeight","top","boxSizing","zIndex","section","title","App","user","chatologyIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AuthProvider","children","setUser","onAuthStateChanged","firebaseUser","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e621178.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBmLLkjb7Yuw24Efm1r8C3qayxNqUZWqMA\",\n  authDomain: \"chat-app-29cc7.firebaseapp.com\",\n  projectId: \"chat-app-29cc7\",\n  storageBucket: \"chat-app-29cc7.appspot.com\",\n  messagingSenderId: \"511025175348\",\n  appId: \"1:511025175348:web:7ffeb00f97188cc29ee361\",\n  measurementId: \"G-VFWMWRLH6F\",\n});\n\nconst firebaseObject = {\n  firebase: firebase,\n  firestore: firebase.firestore(),\n  auth: firebase.auth(),\n};\n\nexport default firebaseObject;\n","import React from \"react\";\nimport firebaseObject from \"../firebaseSetup\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction SignIn() {\n  const auth = firebaseObject.auth;\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return (\n    <Button variant=\"contained\" color=\"primary\" onClick={signInWithGoogle}>\n      Sign in with google\n    </Button>\n  );\n}\n\nexport default SignIn;\n","import { Button, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport firebaseSetup from \"../firebaseSetup\";\n\nconst useStyles = makeStyles({\n  signOutButton: {\n    justifyContent: \"start\",\n  },\n});\n\nfunction SignOut() {\n  const auth = firebaseSetup.auth;\n  const classes = useStyles();\n\n  return (\n    auth.currentUser && (\n      <Button\n        onClick={() => auth.signOut()}\n        className={classes.signOutButton}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Sign Out\n      </Button>\n    )\n  );\n}\n\nexport default SignOut;\n","import React from \"react\";\nimport firebase from \"firebase/app\";\n\nexport const AuthContext = React.createContext<firebase.User | null>(null);\n","export default __webpack_public_path__ + \"static/media/chatology-logos.2f19b4cd.jpeg\";","import React from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {},\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n    textAlign: \"left\",\n    listStyle: \"none\",\n  },\n  sent: {\n    flexDirection: \"row-reverse\",\n    color: \"white\",\n    background: \"#0b93f6\",\n    alignSelf: \"flex-end\",\n  },\n  received: {\n    background: \"#22e276\",\n    color: \"black\",\n    alignSelf: \"flex-start\",\n  },\n  messageStyle: {\n    maxwidth: \"500px\",\n    marginbottom: \"12px\",\n    lineheight: \"24px\",\n    padding: \"10px 20px\",\n    borderradius: \"25px\",\n    position: \"relative\",\n    color: \"white\",\n    textalign: \"center\",\n  },\n  image: {\n    width: \"40px\",\n    height: \"40px\",\n    borderRadius: \"50%\",\n    margin: \"2px 5px\",\n  },\n  date: {\n    display: \"flex\",\n    width: \"100px\",\n    padding: \"10px\",\n    paddingBottom: \"20px\",\n  },\n  timeSent: {\n    flexDirection: \"row-reverse\",\n    color: \"white\",\n    alignSelf: \"flex-end\",\n  },\n  timeReceived: {\n    color: \"black\",\n    alignSelf: \"flex-start\",\n  },\n});\n\nfunction ChatMessage(props: {\n  message: firebase.firestore.DocumentData;\n  auth: firebase.auth.Auth;\n}) {\n  const { text, uid, photoURL, createdAt } = props.message;\n  const classes = useStyles();\n\n  const isOwnMessage = uid === props.auth?.currentUser?.uid;\n\n  const messageClass = isOwnMessage ? classes.sent : classes.received;\n  const dateClass = isOwnMessage ? classes.timeSent : classes.timeReceived;\n\n  const dateTime =\n    createdAt?.toDate().toLocaleTimeString() +\n    \" \" +\n    createdAt?.toDate().toLocaleDateString();\n\n  return (\n    <>\n      <div className={`${classes.message} ${messageClass}`}>\n        <img className={classes.image} src={photoURL} />\n        <div className={classes.messageStyle}>{text}</div>\n      </div>\n      <div className={`${classes.date} ${dateClass}`}>{dateTime}</div>\n    </>\n  );\n}\n\nexport default ChatMessage;\n","import React, { createRef, useEffect, useState } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport { Data } from \"react-firebase-hooks/firestore/dist/firestore/types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Fab } from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ChatMessage from \"./ChatMessage\";\nimport Button from \"@material-ui/core/Button\";\n\nexport interface ChatViewPropsType {\n  messages: Data<firebase.firestore.DocumentData, \"\", \"\">[] | undefined;\n  goBackFunc: () => void;\n  auth: firebase.auth.Auth;\n  messageRef: firebase.firestore.CollectionReference<firebase.firestore.DocumentData>;\n}\n\nconst useStyles = makeStyles({\n  form: {\n    height: \"10vh\",\n    position: \"fixed\",\n    bottom: 0,\n    backgroundColor: \"rgb(24, 23, 23)\",\n    width: \"100%\",\n    maxWidth: \"728px\",\n    display: \"flex\",\n    fontSize: \"1.5rem\",\n  },\n  main: {\n    padding: \"10px\",\n    height: \"80vh\",\n    margin: \"10vh 0 10vh\",\n    overflowY: \"scroll\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"&::-webkit-scrollbar-thumb\": {\n      background: \"#6649b8\",\n    },\n    \"&::-webkit-scrollbar-track\": {\n      background: \"#1e1e24\",\n    },\n    \"&::-webkit-scrollbar\": {\n      width: \"0.25rem\",\n    },\n  },\n  formButton: {\n    width: \"20%\",\n    backgroundColor: \"rgb(56, 56, 143)\",\n  },\n  input: {\n    lineHeight: \"1.5\",\n    width: \"100%\",\n    fontSize: \"1.5rem\",\n    background: \"rgb(58, 58, 58)\",\n    color: \"white\",\n    outline: \"none\",\n    border: \"none\",\n    padding: \"0 10px\",\n  },\n  goBack: {\n    position: \"absolute\",\n    margin: \"20px\",\n  },\n});\n\nconst ChatView = ({\n  messages,\n  goBackFunc,\n  auth,\n  messageRef,\n}: ChatViewPropsType) => {\n  const classes = useStyles();\n  const dummy = React.useRef<HTMLInputElement>(null);\n  const [formValue, setFormValue] = useState(\"\");\n\n  const sendMessage = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (auth.currentUser && formValue != \"\" && formValue != null) {\n      const { uid, photoURL } = auth.currentUser;\n\n      await messageRef.add({\n        text: formValue,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        uid,\n        photoURL,\n      });\n\n      // Reset form\n      setFormValue(\"\");\n\n      dummy?.current?.scrollIntoView({ behavior: \"smooth\" });\n    } else {\n      console.log(\"!!!!!! Send failed due to no current user\");\n    }\n  };\n\n  return (\n    <>\n      <div className={classes.main}>\n        <Fab\n          className={classes.goBack}\n          color=\"primary\"\n          aria-label=\"add\"\n          onClick={goBackFunc}\n        >\n          <ArrowBackIcon />\n        </Fab>\n        {messages &&\n          messages.map((msg) => (\n            <ChatMessage key={msg.id} message={msg} auth={auth} />\n          ))}\n        <div id={\"dummy\"} ref={dummy}></div>\n      </div>\n\n      <form className={classes.form} onSubmit={sendMessage}>\n        <input\n          value={formValue}\n          className={classes.input}\n          onChange={(e) => setFormValue(e.target.value)}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type={\"submit\"}\n          className={classes.formButton}\n          disabled={formValue === \"\"}\n        >\n          Send\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default ChatView;\n","import React, { createRef, useEffect, useState } from \"react\";\nimport ChatMessage from \"./ChatMessage\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport fireBaseObject from \"../firebaseSetup\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Fab } from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ChatView from \"./ChatView\";\n\ntype propType = {\n  goBackFunc: () => void;\n};\n\nfunction ChatRoom({ goBackFunc }: propType) {\n  const firestore = fireBaseObject.firestore;\n  const auth = fireBaseObject.auth;\n  const messageRef = firestore.collection(\"messages\");\n  const query = messageRef.orderBy(\"createdAt\", \"asc\").limitToLast(25);\n  const [messages] = useCollectionData(query, { idField: \"id\" });\n  const [formValue, setFormValue] = useState(\"\");\n  const dummy = React.useRef<HTMLInputElement>(null);\n\n  // Scroll to the bottom of the messages\n  useEffect(() => {\n    dummy?.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  return (\n    <>\n      <ChatView\n        messages={messages}\n        goBackFunc={goBackFunc}\n        auth={auth}\n        messageRef={messageRef}\n      />\n    </>\n  );\n}\n\nexport default ChatRoom;\n\nfunction useRef(initialValue: any) {\n  throw new Error(\"Function not implemented.\");\n}\n","import React, { createContext, useContext, useReducer } from \"react\";\nimport { IGlobalState, IStateProviderProps } from \"./stateInterfaces\";\nimport { ActionType } from \"./actions/actions\";\nimport { initialState } from \"./initialState\";\n\nexport const StateContext: React.Context<\n  [IGlobalState, React.Dispatch<ActionType>]\n> = createContext([\n  initialState,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  (value) => {\n    /*Nothing*/\n  },\n]);\n\nexport function StateProvider({\n  reducer,\n  initialState,\n  children,\n}: IStateProviderProps) {\n  return (\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n      {children}\n    </StateContext.Provider>\n  );\n}\n\nexport const useGlobalState = () =>\n  useContext<[IGlobalState, React.Dispatch<ActionType>]>(StateContext);\n\n/*\nTo use the global state, type:\n[{loading, state1, state2....}, dispatch] = useGlobalState()\nto retrieve the selected states from the global store. Getting a state is optional, for example:\n[{}, dispatch] = useGlobalState()\nWill get just the dispatcher, no states.\n\nTo update the global state, type:\ndispatch({type: ACTION, ...payload)\nwhere '...payload' is the rest of the OPTIONAL parameters, a full example to set a state:\ndispatch({type: UPDATE_MY_STATE, myValue: myVal})\n */\n","import { IGlobalState } from \"./stateInterfaces\";\n\nexport const initialState: IGlobalState = {\n  loading: 0,\n};\n","import { AxiosError } from \"axios\";\n\nexport type ActionType =\n  | IIncrementLoadingAction\n  | IDecrementLoadingAction\n  | IAddErrorAction\n  | IResetLoadingAction;\n\nexport const INCREMENT_LOADING = \"INCREMENT_LOADING\";\nexport const DECREMENT_LOADING = \"DECREMENT_LOADING\";\nexport const RESET_LOADING = \"RESET_LOADING\";\n\nexport interface IIncrementLoadingAction {\n  type: typeof INCREMENT_LOADING;\n}\n\nexport interface IDecrementLoadingAction {\n  type: typeof DECREMENT_LOADING;\n}\n\nexport interface IResetLoadingAction {\n  type: typeof RESET_LOADING;\n}\n\nexport const ADD_ERROR = \"ADD_ERROR\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\n\nexport interface IAddErrorAction {\n  type: typeof ADD_ERROR;\n  error: AxiosError;\n}\n\nexport interface IErrorResponseData {\n  errorCode: number;\n  message: string;\n}\n","import { useState, useEffect, useCallback, useMemo } from \"react\";\nimport axios, {\n  AxiosError,\n  AxiosInstance,\n  AxiosRequestConfig,\n  AxiosResponse,\n  AxiosStatic,\n  CancelTokenSource,\n} from \"axios\";\nimport { Maybe } from \"../interfaces/generalInterfaces\";\nimport { IApiCall } from \"../api/api\";\nimport { useGlobalState } from \"../state/state\";\nimport {\n  ADD_ERROR,\n  DECREMENT_LOADING,\n  IErrorResponseData,\n  INCREMENT_LOADING,\n} from \"../state/actions/actions\";\n\nexport interface useAxiosProps {\n  url: string;\n  method: string;\n  body?: any;\n  headers?: any;\n}\n\nexport type axiosMethod = {\n  get: string;\n  post: string;\n};\n\nconst instance = axios.create({});\n\nconst useAxios = <DataType = void, BodyType = Record<string, unknown>>(\n  initialRequest?: AxiosRequestConfig\n) => {\n  const [response, setResponse] = useState(null);\n  const [{}, dispatch] = useGlobalState();\n  const [error, setError] =\n    useState<Maybe<AxiosResponse<IErrorResponseData>>>(undefined);\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState<Maybe<DataType>>(undefined);\n  const [cancelToken, setCancelToken] =\n    useState<Maybe<CancelTokenSource>>(undefined);\n\n  const call = useCallback(\n    async (overrides: IApiCall<DataType, BodyType> = {}) => {\n      const {\n        successHandler,\n        errorHandler,\n        completeHandler,\n        onCancel,\n        loadingHandler,\n        progressHandler,\n        parameters,\n        body,\n        request: overrideRequest,\n        skipLoading = false,\n      } = overrides;\n      //Reset local data\n      setData(undefined);\n      setError(undefined);\n\n      let authHeader = {};\n\n      let request: Maybe<AxiosRequestConfig> = initialRequest;\n      if (overrideRequest) {\n        request = { ...request, ...overrideRequest };\n      }\n\n      if (!request) {\n        throw new Error(\n          \"useApi is being used incorrectly! A request object is required\"\n        );\n      }\n      if (!request.url) {\n        throw new Error(\"useApi is being used incorrectly! A URL is required\");\n      }\n      if (!request.method) {\n        throw new Error(\n          \"useApi is being used incorrectly! A request type is required\"\n        );\n      }\n\n      if (loadingHandler) loadingHandler(true);\n      if (!skipLoading) dispatch({ type: INCREMENT_LOADING });\n      setLoading(true);\n\n      const token = axios.CancelToken.source();\n      setCancelToken(token);\n\n      const config: AxiosRequestConfig = {\n        headers: {\n          ...authHeader,\n        },\n        params: {\n          ...parameters,\n        },\n        data: body,\n        onUploadProgress: (event: ProgressEvent) => {\n          if (progressHandler) {\n            progressHandler(event);\n          }\n        },\n        onDownloadProgress: (event: ProgressEvent) => {\n          if (progressHandler) {\n            progressHandler(event);\n          }\n        },\n        cancelToken: token.token,\n        ...request,\n      };\n\n      instance(config)\n        .then((response) => {\n          setData(response.data);\n          if (successHandler) successHandler(response.data);\n        })\n        .catch((error: AxiosError) => {\n          if (axios.isCancel(error)) {\n            onCancel && onCancel();\n            setError(error.response);\n            if (errorHandler) errorHandler(error);\n            else dispatch({ type: ADD_ERROR, error: error });\n          }\n        })\n        .finally(() => {\n          setCancelToken(undefined);\n          if (completeHandler) completeHandler();\n          if (loadingHandler) loadingHandler(false);\n          if (!skipLoading) dispatch({ type: DECREMENT_LOADING });\n          setLoading(false);\n        });\n    },\n    [dispatch, initialRequest]\n  );\n\n  return useMemo(() => {\n    return { call, data, error, loading, cancelToken };\n  }, [call, cancelToken, data, error, loading]);\n};\n\nexport default useAxios;\n","import { AxiosError, AxiosRequestConfig } from \"axios\";\nimport React from 'react';\n\n// @ts-ignore\nimport isDev from 'react-is-dev';\nconst ifDevEnv = isDev(React); // true if development mode, false if production\n\nconst getCheckUserUrl = () => {\n  return ifDevEnv ? \"http://localhost:5001/chat-app-29cc7/us-central1/checkIfUserExists\" : \"https://us-central1-chat-app-29cc7.cloudfunctions.net/checkIfUserExists\";\n}\n\n\nexport const GET_USER_DOES_EXIST: AxiosRequestConfig = {\n  method: \"GET\",\n  url: getCheckUserUrl(),\n  params: { text: \"johnindbz@gmail.com\" },\n};\n\nexport type Procedure = () => void;\n\nexport interface IApiCall<DataType, BodyType> {\n  successHandler?: (data: DataType) => void;\n  errorHandler?: (error: AxiosError) => void;\n  completeHandler?: () => void;\n  parameters?: { [key: string]: unknown };\n  body?: BodyType;\n  onCancel?: Procedure;\n  progressHandler?: (event: ProgressEvent) => void;\n  loadingHandler?: (loading: boolean) => void;\n  request?: AxiosRequestConfig;\n  skipLoading?: boolean;\n}\n","import React from \"react\";\nimport firebaseObject from \"../firebaseSetup\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport useAxios from \"../hooks/useAxios\";\nimport axios, { AxiosStatic, AxiosInstance } from \"axios\";\nimport { GET_USER_DOES_EXIST } from \"../api/api\";\n\nconst useStyles = makeStyles({\n  chatRoomContainer: {\n    display: \"flex\",\n    margin: \"15px\",\n  },\n  addFriendButton: {\n    marginLeft: \"15px\",\n  },\n});\n\nexport interface AddFriendProps {\n  openDirectChat: () => void;\n}\n\nfunction AddFriend({ openDirectChat }: AddFriendProps) {\n  const auth = firebaseObject.auth;\n  const classes = useStyles();\n\n  const { call: getFriendData, data: uid } =\n    useAxios<String>(GET_USER_DOES_EXIST);\n\n  //let friendId = useAxios({url: \"https://us-central1-chat-app-29cc7.cloudfunctions.net/checkIfUserExists\", method: 'string'})\n\n  const addFriendAction = () => {\n\n      getFriendData({\n          successHandler: (response) => {\n              console.log(\"!!!!!!!!!\", response);\n              openDirectChat();\n          }\n      });\n\n      // TODO search list of users with friend ID - then open direct chat with id\n      // https://us-central1-chat-app-29cc7.cloudfunctions.net/checkIfUserExists?text=johnindbz@gmail.com  - this works\n  };\n\n  return (\n    <div className={classes.chatRoomContainer}>\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Enter Friend Email\"\n        variant=\"outlined\"\n        type=\"email\"\n      />\n      <Button\n        className={classes.addFriendButton}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => {\n          addFriendAction();\n        }}\n      >\n        Add Friend\n      </Button>\n    </div>\n  );\n}\n\nexport default AddFriend;\n","import React, { createRef, useEffect, useState } from \"react\";\nimport ChatMessage from \"./ChatMessage\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport fireBaseObject from \"../firebaseSetup\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport ChatRoom from \"./ChatRoom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AddFriend from \"./AddFriend\";\n\nconst useStyles = makeStyles({\n  root: {},\n});\n\nconst ChatRoomSelectionEnum = {\n  GLOBAL_CHAT: \"GLOBAL\",\n  NONE: \"NONE\",\n  DIRECT: \"DIRECT\",\n};\n\ntype ChatRoomSelectionEnumType =\n  typeof ChatRoomSelectionEnum[keyof typeof ChatRoomSelectionEnum];\n\nfunction ChatSelector() {\n  const firestore = fireBaseObject.firestore;\n  const auth = fireBaseObject.auth;\n  const classes = useStyles();\n  const [chatRoom, setChatRoom] = useState<ChatRoomSelectionEnumType>(\n    ChatRoomSelectionEnum.NONE\n  );\n\n  const goBack = () => {\n    setChatRoom(ChatRoomSelectionEnum.NONE);\n  };\n\n  const openDirectChat = () => {\n    setChatRoom(ChatRoomSelectionEnum.DIRECT);\n  };\n\n  const chatSelection = (\n    <>\n      <AddFriend openDirectChat={openDirectChat} />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => {\n          setChatRoom(ChatRoomSelectionEnum.GLOBAL_CHAT);\n        }}\n      >\n        Open Global Chat\n      </Button>\n    </>\n  );\n\n  const specificChatRoom = () => {\n    switch (chatRoom) {\n      case ChatRoomSelectionEnum.GLOBAL_CHAT: {\n        return (\n          <>\n            <ChatRoom goBackFunc={goBack} />\n          </>\n        );\n      }\n      default: {\n        return chatSelection;\n      }\n    }\n  };\n\n  return <>{specificChatRoom()}</>;\n}\n\nexport default ChatSelector;\n","import React, { createRef, useContext, useRef, useState } from \"react\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport * as events from \"events\";\nimport ChatRoom from \"./components/ChatRoom\";\nimport SignIn from \"./components/SigninButton\";\nimport SignOut from \"./components/SignOutButton\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport chatologyIcon from \"./icons/chatology-logos.jpeg\";\nimport { Button } from \"@material-ui/core\";\nimport ChatSelector from \"./components/ChatSelector\";\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: \"center\",\n    maxWidth: \"728px\",\n    margin: \"0 auto\",\n  },\n  header: {\n    backgroundColor: \"#181717\",\n    height: \"10vh\",\n    minHeight: \"50px\",\n    color: \"white\",\n    position: \"fixed\",\n    width: \"100%\",\n    maxWidth: \"728px\",\n    top: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: \"10px\",\n    boxSizing: \"border-box\",\n    zIndex: 99,\n  },\n  section: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    minHeight: \"100vh\",\n    backgroundColor: \"rgb(40, 37, 53)\",\n  },\n  title: {\n    padding: \"40px\",\n    fontSize: \"28px\",\n  },\n  signOutButton: {\n    justifyContent: \"start\",\n  },\n});\n\nfunction App() {\n  const user = useContext(AuthContext);\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <header className={classes.header}>\n        <img width={\"60px\"} src={chatologyIcon} />\n        <div className={classes.title}>Chatology - Redefining chat</div>\n        <SignOut />\n      </header>\n      <section className={classes.section}>\n        {user ? <ChatSelector /> : <SignIn />}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect, useState } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport firebase from \"firebase/app\";\nimport firebaseObject from \"../firebaseSetup\";\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [user, setUser] = useState<firebase.User | null>(null);\n\n  useEffect(() => {\n    const unsubscribe = firebaseObject.auth.onAuthStateChanged(\n      (firebaseUser) => {\n        setUser(firebaseUser);\n      }\n    );\n\n    return unsubscribe;\n  }, []);\n\n  return <AuthContext.Provider value={user}>{children}</AuthContext.Provider>;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AuthProvider } from \"./provider/AuthProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}