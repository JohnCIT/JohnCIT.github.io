{"version":3,"sources":["firebaseSetup.ts","components/SigninButton.tsx","components/SignOutButton.tsx","context/AuthContext.tsx","icons/chatology-logos.jpeg","components/ChatMessage.tsx","components/ChatRoom.tsx","components/ChatSelector.tsx","App.tsx","reportWebVitals.ts","provider/AuthProvider.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseObject","firestore","auth","SignIn","Button","variant","color","onClick","provider","GoogleAuthProvider","signInWithPopup","useStyles","makeStyles","signOutButton","justifyContent","SignOut","firebaseSetup","classes","currentUser","signOut","className","AuthContext","React","createContext","root","message","display","alignItems","textAlign","listStyle","sent","flexDirection","background","alignSelf","received","messageStyle","maxwidth","marginbottom","lineheight","padding","borderradius","position","textalign","image","width","height","borderRadius","margin","date","paddingBottom","timeSent","timeReceived","ChatMessage","props","text","uid","photoURL","createdAt","isOwnMessage","messageClass","dateClass","dateTime","toDate","toLocaleTimeString","toLocaleDateString","src","form","bottom","backgroundColor","maxWidth","fontSize","main","overflowY","formButton","input","lineHeight","outline","border","goBack","ChatRoom","goBackFunc","fireBaseObject","messageRef","collection","query","orderBy","limitToLast","useCollectionData","idField","messages","useState","formValue","setFormValue","dummy","useRef","useEffect","current","scrollIntoView","behavior","sendMessage","e","a","preventDefault","add","FieldValue","serverTimestamp","console","log","Fab","map","msg","id","ref","onSubmit","value","onChange","target","type","disabled","ChatRoomSelectionEnum","ChatSelector","chatRoom","setChatRoom","chatSelection","specificChatRoom","header","minHeight","top","boxSizing","zIndex","section","title","App","user","useContext","chatologyIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AuthProvider","children","setUser","onAuthStateChanged","firebaseUser","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90b97a0f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBmLLkjb7Yuw24Efm1r8C3qayxNqUZWqMA\",\n  authDomain: \"chat-app-29cc7.firebaseapp.com\",\n  projectId: \"chat-app-29cc7\",\n  storageBucket: \"chat-app-29cc7.appspot.com\",\n  messagingSenderId: \"511025175348\",\n  appId: \"1:511025175348:web:7ffeb00f97188cc29ee361\",\n  measurementId: \"G-VFWMWRLH6F\",\n});\n\nconst firebaseObject = {\n  firebase: firebase,\n  firestore: firebase.firestore(),\n  auth: firebase.auth(),\n};\n\nexport default firebaseObject;\n","import React from \"react\";\nimport firebaseObject from \"../firebaseSetup\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction SignIn() {\n  const auth = firebaseObject.auth;\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return (\n    <Button variant=\"contained\" color=\"primary\" onClick={signInWithGoogle}>\n      Sign in with google\n    </Button>\n  );\n}\n\nexport default SignIn;\n","import { Button, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport firebaseSetup from \"../firebaseSetup\";\n\nconst useStyles = makeStyles({\n  signOutButton: {\n    justifyContent: \"start\",\n  },\n});\n\nfunction SignOut() {\n  const auth = firebaseSetup.auth;\n  const classes = useStyles();\n\n  return (\n    auth.currentUser && (\n      <Button\n        onClick={() => auth.signOut()}\n        className={classes.signOutButton}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Sign Out\n      </Button>\n    )\n  );\n}\n\nexport default SignOut;\n","import React from \"react\";\nimport firebase from \"firebase/app\";\n\nexport const AuthContext = React.createContext<firebase.User | null>(null);\n","export default __webpack_public_path__ + \"static/media/chatology-logos.2f19b4cd.jpeg\";","import React from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {},\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n    textAlign: \"left\",\n    listStyle: \"none\",\n  },\n  sent: {\n    flexDirection: \"row-reverse\",\n    color: \"white\",\n    background: \"#0b93f6\",\n    alignSelf: \"flex-end\",\n  },\n  received: {\n    background: \"#22e276\",\n    color: \"black\",\n    alignSelf: \"flex-start\",\n  },\n  messageStyle: {\n    maxwidth: \"500px\",\n    marginbottom: \"12px\",\n    lineheight: \"24px\",\n    padding: \"10px 20px\",\n    borderradius: \"25px\",\n    position: \"relative\",\n    color: \"white\",\n    textalign: \"center\",\n  },\n  image: {\n    width: \"40px\",\n    height: \"40px\",\n    borderRadius: \"50%\",\n    margin: \"2px 5px\",\n  },\n  date: {\n    display: \"flex\",\n    width: \"100px\",\n    padding: \"10px\",\n    paddingBottom: \"20px\",\n  },\n  timeSent: {\n    flexDirection: \"row-reverse\",\n    color: \"white\",\n    alignSelf: \"flex-end\",\n  },\n  timeReceived: {\n    color: \"black\",\n    alignSelf: \"flex-start\",\n  },\n});\n\nfunction ChatMessage(props: {\n  message: firebase.firestore.DocumentData;\n  auth: firebase.auth.Auth;\n}) {\n  const { text, uid, photoURL, createdAt } = props.message;\n  const classes = useStyles();\n\n  const isOwnMessage = uid === props.auth?.currentUser?.uid;\n\n  const messageClass = isOwnMessage ? classes.sent : classes.received;\n  const dateClass = isOwnMessage ? classes.timeSent : classes.timeReceived;\n\n  const dateTime =\n    createdAt?.toDate().toLocaleTimeString() +\n    \" \" +\n    createdAt?.toDate().toLocaleDateString();\n\n  return (\n    <>\n      <div className={`${classes.message} ${messageClass}`}>\n        <img className={classes.image} src={photoURL} />\n        <div className={classes.messageStyle}>{text}</div>\n      </div>\n      <div className={`${classes.date} ${dateClass}`}>{dateTime}</div>\n    </>\n  );\n}\n\nexport default ChatMessage;\n","import React, { createRef, useEffect, useState } from \"react\";\nimport ChatMessage from \"./ChatMessage\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport fireBaseObject from \"../firebaseSetup\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Fab } from \"@material-ui/core\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst useStyles = makeStyles({\n  form: {\n    height: \"10vh\",\n    position: \"fixed\",\n    bottom: 0,\n    backgroundColor: \"rgb(24, 23, 23)\",\n    width: \"100%\",\n    maxWidth: \"728px\",\n    display: \"flex\",\n    fontSize: \"1.5rem\",\n  },\n  main: {\n    padding: \"10px\",\n    height: \"80vh\",\n    margin: \"10vh 0 10vh\",\n    overflowY: \"scroll\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"&::-webkit-scrollbar-thumb\": {\n      background: \"#6649b8\",\n    },\n    \"&::-webkit-scrollbar-track\": {\n      background: \"#1e1e24\",\n    },\n    \"&::-webkit-scrollbar\": {\n      width: \"0.25rem\",\n    },\n  },\n  formButton: {\n    width: \"20%\",\n    backgroundColor: \"rgb(56, 56, 143)\",\n  },\n  input: {\n    lineHeight: \"1.5\",\n    width: \"100%\",\n    fontSize: \"1.5rem\",\n    background: \"rgb(58, 58, 58)\",\n    color: \"white\",\n    outline: \"none\",\n    border: \"none\",\n    padding: \"0 10px\",\n  },\n  goBack: {\n    position: \"absolute\",\n    margin: \"20px\"\n  }\n});\n\ntype propType = {\n  goBackFunc: () => void\n}\n\nfunction ChatRoom({goBackFunc} :propType) {\n  const firestore = fireBaseObject.firestore;\n  const auth = fireBaseObject.auth;\n  const messageRef = firestore.collection(\"messages\");\n  const query = messageRef.orderBy(\"createdAt\", \"asc\").limitToLast(25);\n  const [messages] = useCollectionData(query, { idField: \"id\" });\n  const [formValue, setFormValue] = useState(\"\");\n  const dummy = React.useRef<HTMLInputElement>(null);\n  const classes = useStyles();\n\n  // Scroll to the bottom of the messages\n  useEffect(() => {\n    dummy?.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  const sendMessage = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (auth.currentUser && formValue != \"\" && formValue != null) {\n      const { uid, photoURL } = auth.currentUser;\n\n      await messageRef.add({\n        text: formValue,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        uid,\n        photoURL,\n      });\n\n      // Reset form\n      setFormValue(\"\");\n\n      dummy?.current?.scrollIntoView({ behavior: \"smooth\" });\n    } else {\n      console.log(\"!!!!!! Send failed due to no current user\");\n    }\n  };\n\n  return (\n    <>\n      <main className={classes.main}>\n        <Fab className={classes.goBack} color=\"primary\" aria-label=\"add\" onClick={goBackFunc}>\n          <ArrowBackIcon />\n        </Fab>\n        {messages &&\n          messages.map((msg) => (\n            <ChatMessage key={msg.id} message={msg} auth={auth} />\n          ))}\n        <div id={\"dummy\"} ref={dummy}></div>\n      </main>\n\n      <form className={classes.form} onSubmit={sendMessage}>\n        <input\n          value={formValue}\n          className={classes.input}\n          onChange={(e) => setFormValue(e.target.value)}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type={\"submit\"}\n          className={classes.formButton}\n          disabled={formValue === \"\"}\n        >\n          Send\n        </Button>\n      </form>\n    </>\n  );\n}\n\nexport default ChatRoom;\n\nfunction useRef(initialValue: any) {\n  throw new Error(\"Function not implemented.\");\n}\n","import React, { createRef, useEffect, useState } from \"react\";\nimport ChatMessage from \"./ChatMessage\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport fireBaseObject from \"../firebaseSetup\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport ChatRoom from \"./ChatRoom\";\n\nconst useStyles = makeStyles({\n  root: {},\n});\n\nconst ChatRoomSelectionEnum = {\n  GLOBAL_CHAT: \"GLOBAL\",\n  NONE: \"NONE\",\n};\n\ntype ChatRoomSelectionEnumType =\n  typeof ChatRoomSelectionEnum[keyof typeof ChatRoomSelectionEnum];\n\nfunction ChatSelector() {\n  const firestore = fireBaseObject.firestore;\n  const auth = fireBaseObject.auth;\n  const [chatRoom, setChatRoom] = useState<ChatRoomSelectionEnumType>(\n    ChatRoomSelectionEnum.NONE\n  );\n\n  const goBack = () => {\n    setChatRoom(ChatRoomSelectionEnum.NONE)\n  }\n  const chatSelection = (\n    <>\n      <Button\n        onClick={() => {\n          setChatRoom(ChatRoomSelectionEnum.GLOBAL_CHAT);\n        }}\n      >\n        Open Global Chat\n      </Button>\n    </>\n  );\n\n\n\n  const specificChatRoom = () => {\n    switch (chatRoom) {\n      case ChatRoomSelectionEnum.GLOBAL_CHAT: {\n        return <ChatRoom goBackFunc={goBack}/>;\n      }\n      default: {\n        return chatSelection;\n      }\n    }\n  };\n\n  return <>{specificChatRoom()}</>;\n}\n\nexport default ChatSelector;\n","import React, { createRef, useContext, useRef, useState } from \"react\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport * as events from \"events\";\nimport ChatRoom from \"./components/ChatRoom\";\nimport SignIn from \"./components/SigninButton\";\nimport SignOut from \"./components/SignOutButton\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport chatologyIcon from \"./icons/chatology-logos.jpeg\";\nimport { Button } from \"@material-ui/core\";\nimport ChatSelector from \"./components/ChatSelector\";\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: \"center\",\n    maxWidth: \"728px\",\n    margin: \"0 auto\",\n  },\n  header: {\n    backgroundColor: \"#181717\",\n    height: \"10vh\",\n    minHeight: \"50px\",\n    color: \"white\",\n    position: \"fixed\",\n    width: \"100%\",\n    maxWidth: \"728px\",\n    top: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: \"10px\",\n    boxSizing: \"border-box\",\n    zIndex: 99,\n  },\n  section: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    minHeight: \"100vh\",\n    backgroundColor: \"rgb(40, 37, 53)\",\n  },\n  title: {\n    padding: \"40px\",\n    fontSize: \"28px\",\n  },\n  signOutButton: {\n    justifyContent: \"start\",\n  },\n});\n\nfunction App() {\n  const user = useContext(AuthContext);\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <header className={classes.header}>\n        <img width={\"60px\"} src={chatologyIcon} />\n        <div className={classes.title}>Chatology - Redefining chat</div>\n        <SignOut />\n      </header>\n      <section className={classes.section}>\n        {user ? <ChatSelector /> : <SignIn />}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect, useState } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport firebase from \"firebase/app\";\nimport firebaseObject from \"../firebaseSetup\";\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [user, setUser] = useState<firebase.User | null>(null);\n\n  useEffect(() => {\n    const unsubscribe = firebaseObject.auth.onAuthStateChanged(\n      (firebaseUser) => {\n        setUser(firebaseUser);\n      }\n    );\n\n    return unsubscribe;\n  }, []);\n\n  return <AuthContext.Provider value={user}>{children}</AuthContext.Provider>;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AuthProvider } from \"./provider/AuthProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}