{"version":3,"sources":["components/ChatMessage.tsx","firebaseSetup.ts","components/ChatRoom.tsx","components/SigninButton.tsx","components/SignOutButton.tsx","context/AuthContext.tsx","App.tsx","reportWebVitals.ts","provider/AuthProvider.tsx","index.tsx"],"names":["useStyles","makeStyles","root","message","display","alignItems","textAlign","listStyle","sent","flexDirection","color","background","alignSelf","received","messageStyle","maxwidth","marginbottom","lineheight","padding","borderradius","position","textalign","image","width","height","borderRadius","margin","date","paddingBottom","timeSent","timeReceived","ChatMessage","props","text","uid","photoURL","createdAt","classes","isOwnMessage","auth","currentUser","messageClass","dateClass","dateTime","toDate","toLocaleTimeString","toLocaleDateString","className","src","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseObject","firestore","form","bottom","backgroundColor","maxWidth","fontSize","main","overflowY","formButton","input","lineHeight","outline","border","ChatRoom","fireBaseObject","messageRef","collection","query","orderBy","limitToLast","useCollectionData","idField","messages","useState","formValue","setFormValue","dummy","React","useRef","sendMessage","e","a","preventDefault","add","FieldValue","serverTimestamp","current","scrollIntoView","behavior","console","log","map","msg","id","ref","onSubmit","value","onChange","target","Button","variant","type","disabled","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","firebaseSetup","signOut","AuthContext","createContext","header","minHeight","top","justifyContent","boxSizing","zIndex","section","App","user","useContext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AuthProvider","children","setUser","useEffect","onAuthStateChanged","firebaseUser","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f280e602.chunk.js","sourcesContent":["import React from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    root: {\n    },\n    message: {\n        display: \"flex\",\n        alignItems: \"center\",\n        textAlign: \"left\",\n        listStyle: \"none\",\n    },\n    sent: {\n        flexDirection: \"row-reverse\",\n        color: \"white\",\n        background: \"#0b93f6\",\n        alignSelf: \"flex-end\"\n    },\n    received: {\n        background: \"#22e276\",\n        color: \"black\",\n        alignSelf: \"flex-start\",\n    },\n    messageStyle: {\n        maxwidth: \"500px\",\n        marginbottom: \"12px\",\n        lineheight: \"24px\",\n        padding: \"10px 20px\",\n        borderradius: \"25px\",\n        position: \"relative\",\n        color: \"white\",\n        textalign: \"center\",\n    },\n    image: {\n        width: \"40px\",\n        height: \"40px\",\n        borderRadius: \"50%\",\n        margin: \"2px 5px\",\n    },\n    date: {\n        display: \"flex\",\n        width: \"100px\",\n        padding: \"10px\",\n        paddingBottom: \"20px\"\n    },\n    timeSent: {\n        flexDirection: \"row-reverse\",\n        color: \"white\",\n        alignSelf: \"flex-end\"\n    },\n    timeReceived: {\n        color: \"black\",\n        alignSelf: \"flex-start\",\n    },\n});\n\nfunction ChatMessage(props: {\n  message: firebase.firestore.DocumentData;\n  auth: firebase.auth.Auth;\n}) {\n  const { text, uid, photoURL, createdAt } = props.message;\n  const classes = useStyles();\n\n  const isOwnMessage = uid === props.auth?.currentUser?.uid;\n\n  const messageClass = isOwnMessage ? classes.sent : classes.received;\n  const dateClass = isOwnMessage ? classes.timeSent: classes.timeReceived;\n\n  const dateTime = createdAt?.toDate().toLocaleTimeString() + \" \" + createdAt?.toDate().toLocaleDateString();\n\n  return (\n    <>\n      <div className={`${classes.message} ${messageClass}`}>\n        <img className={classes.image} src={photoURL} />\n        <div className={classes.messageStyle}>{text}</div>\n      </div>\n      <div className={`${classes.date} ${dateClass}`}>\n        {dateTime}\n      </div>\n    </>\n  );\n}\n\nexport default ChatMessage;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBmLLkjb7Yuw24Efm1r8C3qayxNqUZWqMA\",\n  authDomain: \"chat-app-29cc7.firebaseapp.com\",\n  projectId: \"chat-app-29cc7\",\n  storageBucket: \"chat-app-29cc7.appspot.com\",\n  messagingSenderId: \"511025175348\",\n  appId: \"1:511025175348:web:7ffeb00f97188cc29ee361\",\n  measurementId: \"G-VFWMWRLH6F\",\n});\n\nconst firebaseObject = {\n  firebase: firebase,\n  firestore: firebase.firestore(),\n  auth: firebase.auth(),\n};\n\nexport default firebaseObject;\n","import React, { createRef, useState } from \"react\";\nimport ChatMessage from \"./ChatMessage\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport fireBaseObject from \"../firebaseSetup\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  form: {\n    height: \"10vh\",\n    position: \"fixed\",\n    bottom: 0,\n    backgroundColor: \"rgb(24, 23, 23)\",\n    width: \"100%\",\n    maxWidth: \"728px\",\n    display: \"flex\",\n    fontSize: \"1.5rem\",\n  },\n  main: {\n    padding: \"10px\",\n    height: \"80vh\",\n    margin: \"10vh 0 10vh\",\n    overflowY: \"scroll\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    '&::-webkit-scrollbar-thumb': {\n      background: \"#6649b8\",\n    },\n    '&::-webkit-scrollbar-track': {\n      background: \"#1e1e24\"\n    },\n    '&::-webkit-scrollbar': {\n      width: \"0.25rem\",\n    }\n  },\n  formButton: {\n    width: \"20%\",\n    backgroundColor: \"rgb(56, 56, 143)\"\n  },\n  input: {\n    lineHeight: \"1.5\",\n    width: \"100%\",\n    fontSize: \"1.5rem\",\n    background: \"rgb(58, 58, 58)\",\n    color: \"white\",\n    outline: \"none\",\n    border: \"none\",\n    padding: \"0 10px\",\n  }\n});\n\nfunction ChatRoom() {\n  const firestore = fireBaseObject.firestore;\n  const auth = fireBaseObject.auth;\n  const messageRef = firestore.collection(\"messages\");\n  const query = messageRef.orderBy(\"createdAt\", \"asc\").limitToLast(25);\n  const [messages] = useCollectionData(query, { idField: \"id\" });\n  const [formValue, setFormValue] = useState(\"\");\n  const dummy = React.useRef<HTMLInputElement>(null);\n  const classes = useStyles();\n\n  const sendMessage = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (auth.currentUser && formValue != \"\" && formValue != null) {\n      const { uid, photoURL } = auth.currentUser;\n\n      await messageRef.add({\n        text: formValue,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        uid,\n        photoURL,\n      });\n\n      // Reset form\n      setFormValue(\"\");\n\n      dummy?.current?.scrollIntoView({ behavior: \"smooth\" });\n    } else {\n      console.log(\"!!!!!! Send failed due to no current user\");\n    }\n  };\n\n  return (\n    <>\n      <main className={classes.main}>\n        {messages &&\n          messages.map((msg) => (\n            <ChatMessage key={msg.id} message={msg} auth={auth} />\n          ))}\n        <div id={\"dummy\"} ref={dummy}></div>\n      </main>\n\n      <form className={classes.form} onSubmit={sendMessage}>\n        <input\n          value={formValue}\n          className={classes.input}\n          onChange={(e) => setFormValue(e.target.value)}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type={\"submit\"}\n          className={classes.formButton}\n          disabled={formValue === \"\"}\n        >\n          Send\n        </Button>\n      </form>\n    </>\n  );\n}\n\nexport default ChatRoom;\n\nfunction useRef(initialValue: any) {\n  throw new Error(\"Function not implemented.\");\n}\n","import React from \"react\";\nimport firebaseObject from \"../firebaseSetup\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction SignIn() {\n  const auth = firebaseObject.auth;\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return (\n    <Button variant=\"contained\" color=\"primary\" onClick={signInWithGoogle}>\n      Sign in with google\n    </Button>\n  );\n}\n\nexport default SignIn;\n","import React from \"react\";\nimport firebaseSetup from \"../firebaseSetup\";\n\nfunction SignOut() {\n  const auth = firebaseSetup.auth;\n\n  return (\n    auth.currentUser && <button onClick={() => auth.signOut()}>Sign out</button>\n  );\n}\n\nexport default SignOut;\n","import React from \"react\";\nimport firebase from \"firebase/app\";\n\nexport const AuthContext = React.createContext<firebase.User | null>(null);\n","import React, { createRef, useContext, useRef, useState } from \"react\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport * as events from \"events\";\nimport ChatRoom from \"./components/ChatRoom\";\nimport SignIn from \"./components/SigninButton\";\nimport SignOut from \"./components/SignOutButton\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: \"center\",\n        maxWidth: \"728px\",\n        margin: \"0 auto\",\n    },\n    header: {\n        backgroundColor: \"#181717\",\n        height: \"10vh\",\n        minHeight: \"50px\",\n        color: \"white\",\n        position: \"fixed\",\n        width: \"100%\",\n        maxWidth: \"728px\",\n        top: 0,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        padding: \"10px\",\n        boxSizing: \"border-box\",\n        zIndex: 99\n    },\n    section: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        minHeight: \"100vh\",\n        backgroundColor: \"rgb(40, 37, 53)\",\n    }\n});\n\nfunction App() {\n  const user = useContext(AuthContext);\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <header className={classes.header}></header>\n      <section className={classes.section}>\n        {user ? <ChatRoom /> : <SignIn />}\n        <SignOut />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect, useState } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport firebase from \"firebase/app\";\nimport firebaseObject from \"../firebaseSetup\";\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [user, setUser] = useState<firebase.User | null>(null);\n\n  useEffect(() => {\n    const unsubscribe = firebaseObject.auth.onAuthStateChanged(\n      (firebaseUser) => {\n        setUser(firebaseUser);\n      }\n    );\n\n    return unsubscribe;\n  }, []);\n\n  return <AuthContext.Provider value={user}>{children}</AuthContext.Provider>;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AuthProvider } from \"./provider/AuthProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}