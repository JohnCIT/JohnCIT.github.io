{"version":3,"sources":["components/ChatMessage.tsx","firebaseSetup.ts","components/ChatRoom.tsx","components/SigninButton.tsx","components/SignOutButton.tsx","context/AuthContext.tsx","App.tsx","reportWebVitals.ts","provider/AuthProvider.tsx","index.tsx"],"names":["ChatMessage","props","message","text","uid","photoURL","messageClass","auth","currentUser","className","src","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseObject","firestore","ChatRoom","fireBaseObject","messageRef","collection","query","orderBy","limitToLast","useCollectionData","idField","messages","useState","formValue","setFormValue","dummy","React","useRef","sendMessage","e","a","preventDefault","add","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","console","log","map","msg","id","ref","onSubmit","value","onChange","target","type","disabled","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","firebaseSetup","signOut","AuthContext","createContext","App","user","useContext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AuthProvider","children","setUser","useEffect","onAuthStateChanged","firebaseUser","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42542b4a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nfunction ChatMessage(props: { message: firebase.firestore.DocumentData, auth:  firebase.auth.Auth }) {\r\n    const {text, uid, photoURL} = props.message;\r\n\r\n    const messageClass = uid === props.auth?.currentUser?.uid ? 'sent' : 'received';\r\n\r\n    return (\r\n        <div className={`message ${messageClass}`}>\r\n            <img src={photoURL}/>\r\n            <p>{text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ChatMessage;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyBmLLkjb7Yuw24Efm1r8C3qayxNqUZWqMA\",\r\n    authDomain: \"chat-app-29cc7.firebaseapp.com\",\r\n    projectId: \"chat-app-29cc7\",\r\n    storageBucket: \"chat-app-29cc7.appspot.com\",\r\n    messagingSenderId: \"511025175348\",\r\n    appId: \"1:511025175348:web:7ffeb00f97188cc29ee361\",\r\n    measurementId: \"G-VFWMWRLH6F\"\r\n});\r\n\r\n\r\nconst firebaseObject = {\r\n    firebase: firebase,\r\n    firestore: firebase.firestore(),\r\n    auth: firebase.auth(),\r\n}\r\n\r\nexport default firebaseObject;","import React, {createRef, useState} from \"react\";\r\nimport ChatMessage from \"./ChatMessage\";\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport {useCollectionData} from 'react-firebase-hooks/firestore'\r\nimport fireBaseObject from '../firebaseSetup';\r\n\r\n\r\n\r\nfunction ChatRoom() {\r\n    const firestore = fireBaseObject.firestore;\r\n    const auth = fireBaseObject.auth;\r\n    const messageRef = firestore.collection('messages');\r\n    const query = messageRef.orderBy('createdAt', \"asc\").limitToLast(25);\r\n    const [messages] = useCollectionData(query, {idField: 'id'});\r\n    const [formValue, setFormValue] = useState('');\r\n    const dummy = React.useRef<HTMLInputElement>(null)\r\n\r\n    const sendMessage = async(e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        if(auth.currentUser && formValue != '' && formValue != null)\r\n        {\r\n            const {uid, photoURL} = auth.currentUser;\r\n\r\n            await messageRef.add({\r\n                text: formValue,\r\n                createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n                uid,\r\n                photoURL\r\n            });\r\n\r\n            // Reset form\r\n            setFormValue('');\r\n\r\n            dummy?.current?.scrollIntoView({behavior: 'smooth'});\r\n        }\r\n        else\r\n        {\r\n            console.log(\"!!!!!! Send failed due to no current user\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <main>\r\n                {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} auth={auth} />)}\r\n                <div id={\"dummy\"} ref={dummy}>\r\n                </div>\r\n            </main>\r\n\r\n            <form onSubmit={sendMessage}>\r\n                <input value={formValue} onChange={(e) => setFormValue(e.target.value)}/>\r\n                <button type={\"submit\"} disabled={formValue === \"\"}>Send</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatRoom;\r\n\r\nfunction useRef(initialValue: any) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n","import React from \"react\";\r\nimport firebaseObject from '../firebaseSetup';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nfunction SignIn() {\r\n\r\n    const auth = firebaseObject.auth;\r\n\r\n    const signInWithGoogle = () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        auth.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <button onClick={signInWithGoogle}>Sign in with google</button>\r\n    )\r\n}\r\n\r\nexport default SignIn;","import React from \"react\";\r\nimport firebaseSetup from '../firebaseSetup';\r\n\r\nfunction SignOut() {\r\n    const auth = firebaseSetup.auth;\r\n\r\n    return auth.currentUser && (\r\n        <button onClick={() => auth.signOut()}>Sign out</button>\r\n    )\r\n}\r\n\r\nexport default SignOut;","import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\n\r\nexport const AuthContext = React.createContext<firebase.User | null>(null);","import React, {createRef, useContext, useRef, useState} from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport {useCollectionData} from 'react-firebase-hooks/firestore'\nimport * as events from \"events\";\nimport ChatRoom from './components/ChatRoom';\nimport SignIn from './components/SigninButton';\nimport SignOut from './components/SignOutButton';\nimport { AuthContext } from \"./context/AuthContext\";\n\nfunction App() {\n    const user = useContext(AuthContext);\n\n    return (\n        <div className=\"App\">\n          <header>\n\n          </header>\n            <section>\n                {user ? <ChatRoom/> : <SignIn />}\n                <SignOut />\n\n            </section>\n        </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport firebase from \"firebase/app\";\r\nimport firebaseObject from \"../firebaseSetup\";\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n    const [user, setUser] = useState<firebase.User | null>(null);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = firebaseObject.auth.onAuthStateChanged((firebaseUser) => {\r\n            setUser(firebaseUser);\r\n        });\r\n\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    return <AuthContext.Provider value={user}>{children}</AuthContext.Provider>;\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthProvider } from './provider/AuthProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}